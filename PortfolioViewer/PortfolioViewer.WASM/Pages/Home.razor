@page "/"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<PageTitle>Home</PageTitle>

<h1>Start page</h1>

<p>Before use, please sync the data with a copy of the server</p>

@if (LastSyncTime.HasValue)
{
	<div class="alert alert-info mb-3">
		<strong>Last sync:</strong> @LastSyncTime.Value.ToString("dd/MM/yyyy HH:mm:ss")
		<small class="text-muted ms-2">(@GetTimeSinceLastSync())</small>
	</div>
}
else
{
	<div class="alert alert-warning mb-3">
		<strong>No sync yet:</strong> Please perform your first sync to get started.
	</div>
}

<div>
	<p>@CurrentAction</p>
	<div class="progress">
		<div class="progress-bar" role="progressbar" style="width: @Progress%;" aria-valuenow="@Progress" aria-valuemin="0" aria-valuemax="100">
			@Progress%
		</div>
	</div>
</div>

<button class="btn btn-primary" @onclick="StartSync" disabled="@IsSyncing">Start Sync</button>

@code {
	private string GetTimeSinceLastSync()
	{
		if (!LastSyncTime.HasValue)
			return string.Empty;

		var timeSince = DateTime.Now - LastSyncTime.Value;
		
		if (timeSince.TotalMinutes < 1)
			return "just now";
		else if (timeSince.TotalHours < 1)
			return $"{(int)timeSince.TotalMinutes} minute{((int)timeSince.TotalMinutes != 1 ? "s" : "")} ago";
		else if (timeSince.TotalDays < 1)
			return $"{(int)timeSince.TotalHours} hour{((int)timeSince.TotalHours != 1 ? "s" : "")} ago";
		else
			return $"{(int)timeSince.TotalDays} day{((int)timeSince.TotalDays != 1 ? "s" : "")} ago";
	}
}