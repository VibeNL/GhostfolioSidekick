@page "/"
@using Microsoft.AspNetCore.Authorization
@using GhostfolioSidekick.Model
@attribute [Authorize]

<PageTitle>Home</PageTitle>

<h1>Start page</h1>

<p>Before use, please sync the data with a copy of the server</p>

@if (LastSyncTime.HasValue)
{
	<div class="alert alert-info mb-3">
		<strong>Last sync:</strong> @LastSyncTime.Value.ToString("dd/MM/yyyy HH:mm:ss")
		<small class="text-muted ms-2">(@GetTimeSinceLastSync())</small>
		@if (!IsSyncing && GetDaysSinceLastSync() <= 7)
		{
			<div class="mt-2">
				<small class="text-info">
					<i class="bi bi-lightning-fill me-1"></i>
					Next sync will be fast (partial sync - only missing days)
				</small>
			</div>
		}
		@if (!string.IsNullOrEmpty(_lastSyncCurrency))
		{
			<div class="mt-1">
				<small class="text-muted">
					<i class="bi bi-currency-exchange me-1"></i>
					Last sync currency: @_lastSyncCurrency
				</small>
			</div>
		}
	</div>
}
else
{
	<div class="alert alert-warning mb-3">
		<strong>No sync yet:</strong> Please perform your first sync to get started.
		<div class="mt-2">
			<small class="text-muted">
				<i class="bi bi-info-circle me-1"></i>
				First sync downloads all data and may take longer
			</small>
		</div>
	</div>
}

<!-- Currency Selection Section -->
<div class="row mb-4">
	<div class="col-lg-6">
		<div class="card">
			<div class="card-header">
				<h6 class="card-title mb-0">
					<i class="bi bi-currency-exchange me-2"></i>Currency Configuration
				</h6>
			</div>
			<div class="card-body">
				<div class="mb-3">
					<label class="form-label">Target Currency for Sync</label>
					<select class="form-select" value="@_selectedCurrency" @onchange="OnCurrencyChanged" disabled="@IsSyncing">
						<option value="EUR">EUR (Euro)</option>
						<option value="USD">USD (US Dollar)</option>
						<option value="GBP">GBP (British Pound)</option>
					</select>
					<div class="form-text">
						All monetary values will be converted to this currency during synchronization.
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- Sync Progress Section -->
<div class="mb-4">
	<p>@CurrentAction</p>
	<div class="progress">
		<div class="progress-bar" role="progressbar" style="width: @Progress%;" aria-valuenow="@Progress" aria-valuemin="0" aria-valuemax="100">
			@Progress%
		</div>
	</div>
</div>

<!-- Sync Buttons Section -->
<div class="d-flex gap-2 flex-wrap">
	<button class="btn btn-primary" @onclick="StartSync" disabled="@IsSyncing">
		@if (IsSyncing)
		{
			<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
		}
		else
		{
			<i class="bi bi-arrow-repeat me-2"></i>
		}
		@GetSyncButtonText()
	</button>

	@if (LastSyncTime.HasValue && !IsSyncing)
	{
		<div class="btn-group" role="group">
			<button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
				<i class="bi bi-gear me-1"></i>
				Options
			</button>
			<ul class="dropdown-menu">
				<li>
					<button class="dropdown-item" @onclick="StartFullSync">
						<i class="bi bi-arrow-clockwise me-2"></i>
						Force Full Sync
						<small class="text-muted d-block">Download all data (slower but complete)</small>
					</button>
				</li>
			</ul>
		</div>
	}
	
	<button class="btn btn-outline-secondary" @onclick="ResetCurrency" disabled="@IsSyncing">
		<i class="bi bi-arrow-clockwise me-1"></i>Reset Currency
	</button>
</div>

@if (!string.IsNullOrEmpty(_statusMessage))
{
	<div class="alert @(_isError ? "alert-danger" : "alert-success") mt-3" role="alert">
		<i class="bi @(_isError ? "bi-exclamation-triangle" : "bi-check-circle") me-2"></i>
		@_statusMessage
	</div>
}