@page "/portfolio-timeseries"
@using Microsoft.AspNetCore.Authorization
@using GhostfolioSidekick.PortfolioViewer.WASM.Models
@using GhostfolioSidekick.PortfolioViewer.WASM.Components
@attribute [Authorize]

<PageTitle>Portfolio Time Series</PageTitle>

<div class="container-fluid">

    @if (IsLoading)
    {
        <div class="row">
            <div class="col-12 text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <h5 class="text-muted">Loading Time Series Data...</h5>
            </div>
        </div>
    }
    else if (HasError)
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger" role="alert">
                    <h4 class="alert-heading">Error Loading Data</h4>
                    <p>@ErrorMessage</p>
                    <hr>
                    <button class="btn btn-outline-danger" @onclick="LoadTimeSeriesAsync">
                        <i class="bi bi-arrow-clockwise"></i> Try Again
                    </button>
                </div>
            </div>
        </div>
    }
    else if (TimeSeriesData.Count == 0)
    {
        <div class="row">
            <div class="col-12 text-center">
                <h5 class="text-muted">No time series data found for the selected filters.</h5>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">Portfolio Time Series</h5>
                        <div class="d-flex gap-2">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn @(ViewMode == "chart" ? "btn-primary" : "btn-outline-primary")"
                                        @onclick="@(() => ViewMode = "chart")">
                                    <i class="bi bi-bar-chart-line"></i> Chart
                                </button>
                                <button type="button" class="btn @(ViewMode == "table" ? "btn-primary" : "btn-outline-primary")"
                                        @onclick="@(() => ViewMode = "table")">
                                    <i class="bi bi-table"></i> Table
                                </button>
                            </div>
                            <button class="btn btn-outline-secondary" @onclick="LoadTimeSeriesAsync" disabled="@IsLoading">
                                <i class="bi bi-arrow-clockwise"></i> Refresh
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (ViewMode == "chart")
                        {
                            <PlotlyChart Data="plotData" Layout="plotLayout" Config="plotConfig" style="height: 60vh; width: 100%;" />
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th scope="col">
                                                <SortableTableHeader Column="Date" 
                                                                   DisplayName="Date" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="TotalValue" 
                                                                   DisplayName="Portfolio Value" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="TotalInvested" 
                                                                   DisplayName="Total Invested" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="GainLoss" 
                                                                   DisplayName="Gain/Loss" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="GainLossPercentage" 
                                                                   DisplayName="%" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var dataPoint in TimeSeriesDisplayData)
                                        {
                                            <tr>
                                                <td>
                                                    <strong>@dataPoint.Date.ToString("yyyy-MM-dd")</strong>
                                                </td>
                                                <td class="text-end">
                                                    <strong>@CurrencyDisplay.DisplaySignAndAmount(@dataPoint.TotalValue)</strong>
                                                </td>
                                                <td class="text-end">
                                                    @CurrencyDisplay.DisplaySignAndAmount(@dataPoint.TotalInvested)
                                                </td>
                                                <td class="text-end">
                                                    <span class="@(dataPoint.GainLoss.Amount >= 0 ? "text-success" : "text-danger")">
                                                        @CurrencyDisplay.DisplaySignAndAmount(@dataPoint.GainLoss)
                                                    </span>
                                                </td>
                                                <td class="text-end">
                                                    <span class="@(dataPoint.GainLossPercentage >= 0 ? "text-success" : "text-danger")">
                                                        @dataPoint.GainLossPercentage.ToString("P2")
                                                    </span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                    @if (TimeSeriesDisplayData.Count > 0)
                                    {
                                        <tfoot class="table-light">
                                            <tr>
                                                <th>Latest (@TimeSeriesDisplayData.Last().Date.ToString("yyyy-MM-dd"))</th>
                                                <th class="text-end">@CurrencyDisplay.DisplaySignAndAmount(@TimeSeriesDisplayData.Last().TotalValue)</th>
                                                <th class="text-end">@CurrencyDisplay.DisplaySignAndAmount(@TimeSeriesDisplayData.Last().TotalInvested)</th>
                                                <th class="text-end">
                                                    <span class="@(TimeSeriesDisplayData.Last().GainLoss.Amount >= 0 ? "text-success" : "text-danger")">
                                                        @CurrencyDisplay.DisplaySignAndAmount(@TimeSeriesDisplayData.Last().GainLoss)
                                                    </span>
                                                </th>
                                                <th class="text-end">
                                                    <span class="@(TimeSeriesDisplayData.Last().GainLossPercentage >= 0 ? "text-success" : "text-danger")">
                                                        @TimeSeriesDisplayData.Last().GainLossPercentage.ToString("P2")
                                                    </span>
                                                </th>
                                            </tr>
                                        </tfoot>
                                    }
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .table th {
        position: sticky;
        top: 0;
        z-index: 10;
        width: 100%;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }
    
    .table td, .table th {
        white-space: normal;
        padding-left: 0.5rem;
        padding-right: 0.5rem;
    }
</style>
