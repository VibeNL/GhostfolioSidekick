@page "/sync"
@using GhostfolioSidekick.Database
@using GhostfolioSidekick.Model.Accounts
@using GhostfolioSidekick.PortfolioViewer.WASM.Clients
@using Microsoft.EntityFrameworkCore
@inject HttpClient Http

<PageTitle>Sync Portfolio</PageTitle>

<h1>Sync Portfolio</h1>

<p>Update the data with a copy of the server</p>

<div>
	<p>@CurrentAction</p>
	<div class="progress">
		<div class="progress-bar" role="progressbar" style="width: @Progress%;" aria-valuenow="@Progress" aria-valuemin="0" aria-valuemax="100">
			@Progress%
		</div>
	</div>
</div>

<button class="btn btn-primary" @onclick="StartSync" disabled="@IsSyncing">Start Sync</button>

@code {
	[Inject]
	private PortfolioClient PortfolioClient { get; set; }

	private string CurrentAction = "Idle";
	private int Progress = 0;
	private bool IsSyncing = false;

	private async Task StartSync()
	{
		IsSyncing = true;
		CurrentAction = "Starting sync...";
		Progress = 0;

		var progress = new Progress<(string action, int progress)>(update =>
		{
			CurrentAction = update.action;
			Progress = update.progress;
			StateHasChanged(); // Update the UI
		});

		try
		{
			await PortfolioClient.SyncPortfolio(progress);
		}
		finally
		{
			IsSyncing = false;
		}
	}
}
