@page "/transactions"
@using Microsoft.AspNetCore.Authorization
@using GhostfolioSidekick.PortfolioViewer.WASM.Models
@using GhostfolioSidekick.PortfolioViewer.WASM.Components
@using GhostfolioSidekick.PortfolioViewer.WASM.Components.Filters
@inject GhostfolioSidekick.PortfolioViewer.WASM.Services.ITestContextService TestContextService
@attribute [Authorize]

<PageTitle>Transactions</PageTitle>

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-12">
            <h1 class="display-4">Portfolio Transactions</h1>
            <p class="text-muted">View and filter your portfolio transactions</p>
        </div>
    </div>

    @if (IsLoading)
    {
        <!-- Loading State -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <div class="spinner-border text-primary mb-3" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <h5 class="text-muted">Loading Transaction Data...</h5>
                        <p class="text-muted mb-0">Please wait while we fetch your transaction information.</p>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (HasError)
    {
        <!-- Error State -->
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger" role="alert">
                    <h4 class="alert-heading">Error Loading Data</h4>
                    <p>@ErrorMessage</p>
                    <hr>
                    <button class="btn btn-outline-danger" @onclick="RefreshDataAsync">
                        <i class="bi bi-arrow-clockwise"></i> Try Again
                    </button>
                </div>
            </div>
        </div>
    }
    else if (!TransactionsList.Any())
    {
        <!-- Empty State -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="bi bi-receipt text-muted" style="font-size: 4rem;"></i>
                        <h5 class="text-muted mt-3">No Transactions Found</h5>
                        <p class="text-muted mb-3">No transactions match your current filter criteria or date range.</p>
                        <button class="btn btn-primary" @onclick="RefreshDataAsync">
                            <i class="bi bi-arrow-clockwise"></i> Refresh Data
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Main Content -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">Transactions (@TransactionsList.Count)</h5>
                        <div class="d-flex gap-2">
                            <button class="btn btn-outline-secondary" @onclick="RefreshDataAsync" disabled="@IsLoading">
                                <i class="bi bi-arrow-clockwise"></i> Refresh
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th scope="col">
                                            <SortableTableHeader Column="Date" 
                                                               DisplayName="Date" 
                                                               CurrentSortColumn="@sortColumn" 
                                                               IsAscending="@sortAscending" 
                                                               OnSort="SortBy" />
                                        </th>
                                        <th scope="col">
                                            <SortableTableHeader Column="Type" 
                                                               DisplayName="Type" 
                                                               CurrentSortColumn="@sortColumn" 
                                                               IsAscending="@sortAscending" 
                                                               OnSort="SortBy" />
                                        </th>
                                        <th scope="col">
                                            <SortableTableHeader Column="Symbol" 
                                                               DisplayName="Symbol" 
                                                               CurrentSortColumn="@sortColumn" 
                                                               IsAscending="@sortAscending" 
                                                               OnSort="SortBy" />
                                        </th>
                                        <th scope="col">
                                            <SortableTableHeader Column="Name" 
                                                               DisplayName="Name" 
                                                               CurrentSortColumn="@sortColumn" 
                                                               IsAscending="@sortAscending" 
                                                               OnSort="SortBy" />
                                        </th>
                                        <th scope="col">
                                            <SortableTableHeader Column="AccountName" 
                                                               DisplayName="Account" 
                                                               CurrentSortColumn="@sortColumn" 
                                                               IsAscending="@sortAscending" 
                                                               OnSort="SortBy" />
                                        </th>
                                        <th scope="col" class="text-end">
                                            <SortableTableHeader Column="Quantity" 
                                                               DisplayName="Quantity" 
                                                               CurrentSortColumn="@sortColumn" 
                                                               IsAscending="@sortAscending" 
                                                               OnSort="SortBy" />
                                        </th>
                                        <th scope="col" class="text-end">
                                            <SortableTableHeader Column="TotalValue" 
                                                               DisplayName="Total Value" 
                                                               CurrentSortColumn="@sortColumn" 
                                                               IsAscending="@sortAscending" 
                                                               OnSort="SortBy" />
                                        </th>
                                        <th scope="col">
                                            <SortableTableHeader Column="Description" 
                                                               DisplayName="Description" 
                                                               CurrentSortColumn="@sortColumn" 
                                                               IsAscending="@sortAscending" 
                                                               OnSort="SortBy" />
                                        </th>
                                        <th scope="col" class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var transaction in TransactionsList)
                                    {
                                        <tr class="transaction-row" title="@transaction.TransactionId">
                                            <td>
                                                <strong>@transaction.Date.ToString("yyyy-MM-dd")</strong>
                                                <br>
                                                <small class="text-muted">@transaction.Date.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                <span class="badge @GetTypeClass(transaction.Type)">@transaction.Type</span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(transaction.Symbol))
                                                {
                                                    <strong>@transaction.Symbol</strong>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(transaction.Name))
                                                {
                                                    @transaction.Name
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">@transaction.AccountName</span>
                                            </td>
                                            <td class="text-end">
                                                @if (transaction.Quantity.HasValue)
                                                {
                                                    @transaction.Quantity.Value.ToString("N4")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                @if (transaction.TotalValue != null)
                                                {
                                                    <strong class="@GetValueClass(transaction.TotalValue, transaction.Type)">
                                                        @CurrencyDisplay.DisplaySignAndAmount(transaction.TotalValue)
                                                    </strong>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(transaction.Description))
                                                {
                                                    <small>@transaction.Description</small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <button type="button" 
                                                        class="btn btn-outline-primary btn-sm" 
                                                        data-bs-toggle="modal" 
                                                        data-bs-target="#transactionDetailsModal"
                                                        @onclick="@(() => ShowTransactionDetails(transaction))">
                                                    <i class="bi bi-eye"></i> Details
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Summary Cards -->
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title mb-0">Transaction Summary</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <span>Total Transactions:</span>
                            <strong>@TransactionsList.Count</strong>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>Date Range:</span>
                            <small>@FilterState.StartDate.ToString("yyyy-MM-dd") to @FilterState.EndDate.ToString("yyyy-MM-dd")</small>
                        </div>
                        @if (!string.IsNullOrEmpty(FilterState.SelectedSymbol))
                        {
                            <div class="d-flex justify-content-between">
                                <span>Filtered Symbol:</span>
                                <strong>@FilterState.SelectedSymbol</strong>
                            </div>
                        }
                        @if (FilterState.SelectedAccountId > 0)
                        {
                            <div class="d-flex justify-content-between">
                                <span>Filtered Account:</span>
                                <strong>Account ID: @FilterState.SelectedAccountId</strong>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(FilterState.SelectedTransactionType))
                        {
                            <div class="d-flex justify-content-between">
                                <span>Filtered Type:</span>
                                <strong>@FilterState.SelectedTransactionType</strong>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(FilterState.SearchText))
                        {
                            <div class="d-flex justify-content-between">
                                <span>Search:</span>
                                <strong>"@FilterState.SearchText"</strong>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title mb-0">Transaction Types</h6>
                    </div>
                    <div class="card-body">
                        @foreach (var typeGroup in TransactionTypeBreakdown.OrderByDescending(x => x.Value))
                        {
                            <div class="d-flex justify-content-between">
                                <span>@typeGroup.Key:</span>
                                <strong>@typeGroup.Value</strong>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title mb-0">Account Breakdown</h6>
                    </div>
                    <div class="card-body">
                        @foreach (var accountGroup in AccountBreakdown.OrderByDescending(x => x.Value))
                        {
                            <div class="d-flex justify-content-between">
                                <span>@accountGroup.Key:</span>
                                <strong>@accountGroup.Value</strong>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Transaction Details Modal -->
<div class="modal fade" id="transactionDetailsModal" tabindex="-1" aria-labelledby="transactionDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transactionDetailsModalLabel">
                    <i class="bi bi-receipt"></i> Transaction Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (SelectedTransaction != null)
                {
                    <div class="row g-3">
                        <!-- Basic Information -->
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-header">
                                    <h6 class="card-title mb-0"><i class="bi bi-info-circle"></i> Basic Information</h6>
                                </div>
                                <div class="card-body">
                                    <div class="mb-2">
                                        <strong>Date:</strong> 
                                        @SelectedTransaction.Date.ToString("yyyy-MM-dd HH:mm")
                                    </div>
                                    <div class="mb-2">
                                        <strong>Type:</strong> 
                                        <span class="badge @GetTypeClass(SelectedTransaction.Type)">@SelectedTransaction.Type</span>
                                    </div>
                                    <div class="mb-2">
                                        <strong>Transaction ID:</strong> 
                                        <code>@SelectedTransaction.TransactionId</code>
                                    </div>
                                    <div class="mb-2">
                                        <strong>Account:</strong> 
                                        <span class="badge bg-secondary">@SelectedTransaction.AccountName</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Security Information -->
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-header">
                                    <h6 class="card-title mb-0"><i class="bi bi-graph-up"></i> Security Information</h6>
                                </div>
                                <div class="card-body">
                                    <div class="mb-2">
                                        <strong>Symbol:</strong> 
                                        @if (!string.IsNullOrEmpty(SelectedTransaction.Symbol))
                                        {
                                            <strong>@SelectedTransaction.Symbol</strong>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </div>
                                    <div class="mb-2">
                                        <strong>Name:</strong> 
                                        @if (!string.IsNullOrEmpty(SelectedTransaction.Name))
                                        {
                                            @SelectedTransaction.Name
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </div>
                                    <div class="mb-2">
                                        <strong>Quantity:</strong> 
                                        @if (SelectedTransaction.Quantity.HasValue)
                                        {
                                            @SelectedTransaction.Quantity.Value.ToString("N4")
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </div>
                                    <div class="mb-2">
                                        <strong>Currency:</strong> 
                                        <span class="badge bg-info">@SelectedTransaction.Currency</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Financial Details -->
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0"><i class="bi bi-currency-dollar"></i> Financial Details</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="text-center p-3 border rounded">
                                                <div class="text-muted small">Unit Price</div>
                                                <div class="h5 mb-0">
                                                    @if (SelectedTransaction.UnitPrice != null)
                                                    {
                                                        @CurrencyDisplay.DisplaySignAndAmount(SelectedTransaction.UnitPrice)
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center p-3 border rounded">
                                                <div class="text-muted small">Total Value</div>
                                                <div class="h5 mb-0">
                                                    @if (SelectedTransaction.TotalValue != null)
                                                    {
                                                        <strong class="@GetValueClass(SelectedTransaction.TotalValue, SelectedTransaction.Type)">
                                                            @CurrencyDisplay.DisplaySignAndAmount(SelectedTransaction.TotalValue)
                                                        </strong>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center p-3 border rounded">
                                                <div class="text-muted small">Fee</div>
                                                <div class="h5 mb-0">
                                                    @if (SelectedTransaction.Fee != null)
                                                    {
                                                        <span class="text-danger">@CurrencyDisplay.DisplaySignAndAmount(SelectedTransaction.Fee)</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center p-3 border rounded">
                                                <div class="text-muted small">Tax</div>
                                                <div class="h5 mb-0">
                                                    @if (SelectedTransaction.Tax != null)
                                                    {
                                                        <span class="text-danger">@CurrencyDisplay.DisplaySignAndAmount(SelectedTransaction.Tax)</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @if (SelectedTransaction.Amount != null)
                                    {
                                        <div class="row mt-3">
                                            <div class="col-12">
                                                <div class="text-center p-3 border rounded bg-light">
                                                    <div class="text-muted small">Amount</div>
                                                    <div class="h4 mb-0">
                                                        <strong>@CurrencyDisplay.DisplaySignAndAmount(SelectedTransaction.Amount)</strong>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Description -->
                        @if (!string.IsNullOrEmpty(SelectedTransaction.Description))
                        {
                            <div class="col-12">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="card-title mb-0"><i class="bi bi-chat-left-text"></i> Description</h6>
                                    </div>
                                    <div class="card-body">
                                        <p class="mb-0">@SelectedTransaction.Description</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> Close
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .table th {
        position: sticky;
        top: 0;
        z-index: 10;
        width: 100%;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }
    
    .table td, .table th {
        white-space: nowrap;
        padding-left: 0.5rem;
        padding-right: 0.5rem;
    }

    .transaction-row:hover {
        background-color: #f8f9fa !important;
        transition: background-color 0.15s ease-in-out;
    }

    .transaction-row {
        transition: background-color 0.15s ease-in-out;
    }

    .table td:nth-child(8) {
        max-width: 200px;
        white-space: normal;
        word-wrap: break-word;
    }

    /* Modal specific styles */
    .modal-body .card {
        border: 1px solid #dee2e6;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }
    
    .modal-body .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }
    
    .modal-body .border.rounded {
        background-color: #ffffff;
        transition: background-color 0.15s ease-in-out;
    }
    
    .modal-body .border.rounded:hover {
        background-color: #f8f9fa;
    }
</style>