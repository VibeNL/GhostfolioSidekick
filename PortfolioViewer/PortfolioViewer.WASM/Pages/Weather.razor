@page "/weather"
@using GhostfolioSidekick.Database
@using GhostfolioSidekick.Model.Accounts
@using GhostfolioSidekick.PortfolioViewer.WASM.Clients
@using Microsoft.EntityFrameworkCore
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (Accounts == null || Accounts.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul>
        @foreach (var account in Accounts)
        {
            <li>
                <strong>@account.Name</strong> (@account.Platform?.Name)
                @if (!string.IsNullOrEmpty(account.Comment))
                {
                    <p>@account.Comment</p>
                }
            </li>
        }
    </ul>
}

@code {

    [Inject]
    private PortfolioClient PortfolioClient { get; set; }

    [Inject]
    private DatabaseContext DatabaseContext { get; set; }

    private List<Account> Accounts = [];

    protected override async Task OnInitializedAsync()
    {
        await PortfolioClient.SyncPortfolio();

        Accounts = await DatabaseContext.Accounts
            .Include(a => a.Platform)
            .ToListAsync();
    }
}
