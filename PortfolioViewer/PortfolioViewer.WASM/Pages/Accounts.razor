@page "/accounts"
@using Microsoft.AspNetCore.Authorization
@using GhostfolioSidekick.PortfolioViewer.WASM.Models
@using GhostfolioSidekick.PortfolioViewer.WASM.Components
@using GhostfolioSidekick.PortfolioViewer.WASM.Components.Filters
@inject GhostfolioSidekick.PortfolioViewer.WASM.Services.ITestContextService TestContextService
@attribute [Authorize]

<PageTitle>Accounts</PageTitle>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="display-4">Account Overview</h1>
            <p class="text-muted">Current portfolio status and account performance tracking</p>
        </div>
    </div>

    @if (IsLoading)
    {
        <!-- Loading State -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <div class="spinner-border text-primary mb-3" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <h5 class="text-muted">Loading Account Data...</h5>
                        <p class="text-muted mb-0">Please wait while we fetch your account value information.</p>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (HasError)
    {
        <!-- Error State -->
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger" role="alert">
                    <h4 class="alert-heading">Error Loading Data</h4>
                    <p>@ErrorMessage</p>
                </div>
            </div>
        </div>
    }
    else if (!AccountsData.Any())
    {
        <!-- Empty State -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="bi bi-bank text-muted" style="font-size: 4rem;"></i>
                        <h5 class="text-muted mt-3">No Account Data Found</h5>
                        <p class="text-muted mb-3">No account value data found for your current date range.</p>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Current Portfolio Overview - Front and Center -->
        <div class="row mb-4">
            <div class="col-lg-8">
                <div class="card border-primary shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h4 class="card-title mb-0">
                            <i class="bi bi-pie-chart-fill me-2"></i>Current Portfolio Overview
                        </h4>
                    </div>
                    <div class="card-body">
                        <div class="row g-4">
                            <div class="col-md-4">
                                <div class="text-center p-3 rounded bg-light">
                                    <div class="h2 text-primary mb-1">@CurrencyDisplay.DisplaySignAndAmount(@TotalPortfolioValue)</div>
                                    <div class="text-muted">Total Portfolio Value</div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="text-center p-3 rounded bg-light">
                                    <div class="h4 text-info mb-1">@CurrencyDisplay.DisplaySignAndAmount(@TotalAssetValue)</div>
                                    <div class="text-muted">Asset Holdings</div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="text-center p-3 rounded bg-light">
                                    <div class="h4 text-success mb-1">@CurrencyDisplay.DisplaySignAndAmount(@TotalCashPosition)</div>
                                    <div class="text-muted">Cash Available</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-calendar-range me-2"></i>Date Range
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span class="text-muted">From:</span>
                            <strong>@FilterState.StartDate.ToString("yyyy-MM-dd")</strong>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span class="text-muted">To:</span>
                            <strong>@FilterState.EndDate.ToString("yyyy-MM-dd")</strong>
                        </div>
                        <hr class="my-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="text-muted">Active Accounts:</span>
                            <span class="badge bg-primary fs-6">@LatestAccountValues.Count</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Account Details Breakdown -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-bank me-2"></i>Account Details
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (LatestAccountValues.Any())
                        {
                            <div class="row g-3">
                                @foreach (var latest in LatestAccountValues)
                                {
                                    <div class="col-lg-6 col-xl-4">
                                        <div class="card h-100 border-0 shadow-sm account-detail-card">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-start mb-3">
                                                    <h6 class="card-title text-primary mb-0">@latest.AccountName</h6>
                                                    <span class="badge bg-secondary">@CurrencyDisplay.DisplaySignAndAmount(@latest.Value)</span>
                                                </div>
                                                <div class="row g-2 small">
                                                    <div class="col-6">
                                                        <div class="text-muted">Assets:</div>
                                                        <div class="text-info fw-semibold">@CurrencyDisplay.DisplaySignAndAmount(@latest.Value.Subtract(@latest.Balance))</div>
                                                    </div>
                                                    <div class="col-6">
                                                        <div class="text-muted">Cash:</div>
                                                        <div class="text-success fw-semibold">@CurrencyDisplay.DisplaySignAndAmount(@latest.Balance)</div>
                                                    </div>
                                                    <div class="col-12">
                                                        <div class="text-muted">Gain/Loss:</div>
                                                        <div class="fw-semibold @(latest.GainLoss.Amount >= 0 ? "text-success" : "text-danger")">
                                                            @CurrencyDisplay.DisplaySignAndAmount(@latest.GainLoss)
                                                            <small class="ms-1">(@latest.GainLossPercentage.ToString("P2"))</small>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <span class="text-muted">No account data available</span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Historical Data Section -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-graph-up me-2"></i>Account Value History
                        </h5>
                        <div class="d-flex gap-2">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn @(ViewMode == "chart" ? "btn-primary" : "btn-outline-primary")"
                                        @onclick="@(() => ViewMode = "chart")">
                                    <i class="bi bi-bar-chart-line"></i> Chart
                                </button>
                                <button type="button" class="btn @(ViewMode == "table" ? "btn-primary" : "btn-outline-primary")"
                                        @onclick="@(() => ViewMode = "table")">
                                    <i class="bi bi-table"></i> Table
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (ViewMode == "chart")
                        {
                            <PlotlyChart Data="plotData" Layout="plotLayout" Config="plotConfig" style="height: 60vh; width: 100%;" />
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th scope="col">
                                                <SortableTableHeader Column="Date" 
                                                                   DisplayName="Date" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col">
                                                <SortableTableHeader Column="Account" 
                                                                   DisplayName="Account" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="Value" 
                                                                   DisplayName="Total Value" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="Invested" 
                                                                   DisplayName="Total Invested" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="Balance" 
                                                                   DisplayName="Cash Balance" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="GainLoss" 
                                                                   DisplayName="Gain/Loss" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                            <th scope="col" class="text-end">
                                                <SortableTableHeader Column="GainLossPercentage" 
                                                                   DisplayName="%" 
                                                                   CurrentSortColumn="@sortColumn" 
                                                                   IsAscending="@sortAscending" 
                                                                   OnSort="SortBy" />
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var account in AccountDisplayData)
                                        {
                                            <tr class="account-row">
                                                <td>
                                                    <strong>@account.Date.ToString("yyyy-MM-dd")</strong>
                                                </td>
                                                <td>
                                                    <span class="badge bg-secondary">@account.AccountName</span>
                                                </td>
                                                <td class="text-end">
                                                    <strong>@CurrencyDisplay.DisplaySignAndAmount(@account.Value)</strong>
                                                </td>
                                                <td class="text-end">
                                                    @CurrencyDisplay.DisplaySignAndAmount(@account.Invested)
                                                </td>
                                                <td class="text-end">
                                                    @CurrencyDisplay.DisplaySignAndAmount(@account.Balance)
                                                </td>
                                                <td class="text-end">
                                                    <span class="@(account.GainLoss.Amount >= 0 ? "text-success" : "text-danger")">
                                                        @CurrencyDisplay.DisplaySignAndAmount(@account.GainLoss)
                                                    </span>
                                                </td>
                                                <td class="text-end">
                                                    <span class="@(account.GainLossPercentage >= 0 ? "text-success" : "text-danger")">
                                                        @account.GainLossPercentage.ToString("P2")
                                                    </span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .table th {
        position: sticky;
        top: 0;
        z-index: 10;
        width: 100%;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }
    
    .table td, .table th {
        white-space: nowrap;
        padding-left: 0.5rem;
        padding-right: 0.5rem;
    }

    .account-row:hover {
        background-color: #f8f9fa !important;
        transition: background-color 0.15s ease-in-out;
    }

    .account-row {
        transition: background-color 0.15s ease-in-out;
    }

    .account-detail-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    .account-detail-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1) !important;
    }

    .bg-light {
        background-color: #f8f9fa !important;
        border: 1px solid #e9ecef;
    }

    .card.border-primary {
        border-width: 2px !important;
    }

    .badge.fs-6 {
        font-size: 1rem !important;
    }
</style>