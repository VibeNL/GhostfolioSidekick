@using GhostfolioSidekick.PortfolioViewer.WASM.Models

@if (FilterState != null)
{
    <div class="filters-container">
        @if (ShowDateFilters)
        {
            <div class="filter-group date-filters">
                <div class="btn-group mb-2" role="group" aria-label="Quick Date Ranges">
                    <button class="btn @(GetDateRangeButtonClass("LastWeek"))" @onclick='() => SetDateRange("LastWeek")'>1W</button>
                    <button class="btn @(GetDateRangeButtonClass("LastMonth"))" @onclick='() => SetDateRange("LastMonth")'>1M</button>
                    <button class="btn @(GetDateRangeButtonClass("ThreeMonths"))" @onclick='() => SetDateRange("ThreeMonths")'>3M</button>
                    <button class="btn @(GetDateRangeButtonClass("SixMonths"))" @onclick='() => SetDateRange("SixMonths")'>6M</button>
                    <button class="btn @(GetDateRangeButtonClass("YearToDate"))" @onclick='() => SetDateRange("YearToDate")'>YTD</button>
                    <button class="btn @(GetDateRangeButtonClass("OneYear"))" @onclick='() => SetDateRange("OneYear")'>1Y</button>
                    <button class="btn @(GetDateRangeButtonClass("FiveYear"))" @onclick='() => SetDateRange("FiveYear")'>5Y</button>
                    <button class="btn @(GetDateRangeButtonClass("Max"))" @onclick='() => SetDateRange("Max")'>All</button>
                </div>
                
                <div class="d-flex gap-2 flex-wrap">
                    <div class="date-input">
                        <label class="form-label-sm">From</label>
                        <input type="date" class="form-control form-control-sm" 
                               value="@_pendingFilterState.StartDate.ToString("yyyy-MM-dd")" 
                               @onchange="OnStartDateChanged" />
                    </div>
                    <div class="date-input">
                        <label class="form-label-sm">To</label>
                        <input type="date" class="form-control form-control-sm" 
                               value="@_pendingFilterState.EndDate.ToString("yyyy-MM-dd")" 
                               @onchange="OnEndDateChanged" />
                    </div>
                </div>
            </div>
        }

        @if (ShowAccountFilter)
        {
            <div class="filter-group">
                <label class="form-label-sm">Account</label>
                @if (_isLoadingAccounts)
                {
                    <div class="d-flex align-items-center">
                        <select class="form-select form-select-sm" disabled>
                            <option>Loading accounts...</option>
                        </select>
                        <div class="spinner-border spinner-border-sm ms-2" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <select class="form-select form-select-sm" value="@_pendingFilterState.SelectedAccountId" @onchange="OnAccountChanged">
                        <option value="0">All Accounts</option>
                        @foreach (var account in Accounts)
                        {
                            <option value="@account.Id">@account.Name</option>
                        }
                    </select>
                }
            </div>
        }

        @if (ShowSymbolFilter)
        {
            <div class="filter-group">
                <label class="form-label-sm">Symbol</label>
                @if (_isLoadingSymbols)
                {
                    <div class="d-flex align-items-center">
                        <select class="form-select form-select-sm" disabled>
                            <option>Loading symbols...</option>
                        </select>
                        <div class="spinner-border spinner-border-sm ms-2" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <select class="form-select form-select-sm" value="@_pendingFilterState.SelectedSymbol" @onchange="OnSymbolChanged">
                        <option value="">All Symbols</option>
                        @foreach (var symbol in Symbols)
                        {
                            <option value="@symbol">@symbol</option>
                        }
                    </select>
                }
            </div>
        }

        @if (ShowTransactionTypeFilter)
        {
            <div class="filter-group">
                <label class="form-label-sm">Transaction Type</label>
                <select class="form-select form-select-sm" value="@_pendingFilterState.SelectedTransactionType" @onchange="OnTransactionTypeChanged">
                    <option value="">All Types</option>
                    @if (TransactionTypes != null)
                    {
                        @foreach (var type in TransactionTypes)
                        {
                            <option value="@type">@type</option>
                        }
                    }
                </select>
            </div>
        }

        @if (ShowSearchFilter)
        {
            <div class="filter-group">
                <label class="form-label-sm">Search</label>
                <input type="text" class="form-control form-control-sm" 
                       placeholder="Search symbol, name, or description..." 
                       value="@_pendingFilterState.SearchText" 
                       @onchange="OnSearchTextChanged"
                       @oninput="OnSearchTextInput" />
            </div>
        }

        @if (ShowApplyButton)
        {
            <div class="filter-group filter-actions">
                <div class="d-flex gap-2">
                    <button class="btn btn-primary btn-sm" 
                            @onclick="ApplyFilters" 
                            disabled="@(!HasPendingChanges)"
                            title="Apply filter changes">
                        <i class="bi bi-check-circle me-1"></i>Apply Filters
                    </button>
                    <button class="btn btn-outline-secondary btn-sm" 
                            @onclick="ResetFilters" 
                            disabled="@(!HasPendingChanges)"
                            title="Reset to current filter state">
                        <i class="bi bi-arrow-clockwise me-1"></i>Reset
                    </button>
                </div>
                @if (HasPendingChanges)
                {
                    <small class="text-muted d-block mt-1">
                        <i class="bi bi-info-circle me-1"></i>You have unsaved filter changes
                    </small>
                }
            </div>
        }
    </div>
}