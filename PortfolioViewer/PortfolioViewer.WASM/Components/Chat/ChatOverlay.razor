@using GhostfolioSidekick.PortfolioViewer.WASM.Services
@using Markdig
@inject IJSRuntime JS
@inject WebLLMService llm

<!-- Floating Chat Button -->
<div style="position: fixed; bottom: 24px; right: 24px; z-index: 1000;">
	<button @onclick="ToggleChat"
			style="background-color: #2563eb; color: white; padding: 16px; border-radius: 9999px; border: none; cursor: pointer; box-shadow: 0 4px 12px rgba(0,0,0,0.15); font-size: 20px;">
		ðŸ’¬
	</button>
</div>

@if (IsOpen)
{
	<!-- Overlay Background -->
	<div style="position: fixed; inset: 0; background-color: rgba(0,0,0,0.5); z-index: 1000; display: flex; justify-content: center; align-items: center;">
		<!-- Chat Window -->
		<div style="background-color: white; width: 100%; max-width: 400px; height: 80vh; border-radius: 16px; box-shadow: 0 8px 24px rgba(0,0,0,0.2); display: flex; flex-direction: column; overflow: hidden;">

			<!-- Header -->
			<div style="background-color: #2563eb; color: white; padding: 16px; display: flex; justify-content: space-between; align-items: center;">
				<span style="font-size: 18px; font-weight: bold;">Sidekick Assistant</span>
				<button @onclick="ToggleChat" style="background: none; border: none; font-size: 24px; color: white; cursor: pointer;">Ã—</button>
			</div>

			@if (progress?.Progress != 1)
			{
				<!-- Loading Indicator -->
				<div style="flex: 1; display: flex; justify-content: center; align-items: center; background-color: #f9f9f9;">
					<!-- Format the items below eachother -->
					<div style="display: flex; flex-direction: column; align-items: center; gap: 8px; padding: 16px; text-align: center;">
						<span style="font-size: 16px; color: #555;">
							Loading assistant...

							@if (progress != null)
							{
								@($"{progress.Progress * 100}% completed")
							}
						</span>


						<span style="font-size: 8px; color: #555;">
							@($"({progress?.Text})")
						</span>
					</div>
				</div>
			}
			else
			{
				<!-- Messages -->
				<div style="flex: 1; overflow-y: auto; padding: 16px; display: flex; flex-direction: column; gap: 12px; background-color: #f9f9f9;">
					<div id="chat-messages">
						@foreach (var msg in Messages.Skip(1))
						{
							<div style="@GetBubbleStyle(msg.Role == "user")">
								@((MarkupString)Markdown.ToHtml(msg.Content, pipeline))
							</div>
						}

						@if (IsBotTyping && string.IsNullOrWhiteSpace(streamingText))
						{
							<div class="typing-bubble">
								<span class="typing-dots">
									<span>.</span><span>.</span><span>.</span>
								</span>
							</div>
						}
						@if (IsBotTyping && !string.IsNullOrWhiteSpace(streamingText))
						{
							<div style="@GetBubbleStyle(false)">
								@((MarkupString)Markdown.ToHtml(streamingText, pipeline))
							</div>
						}
					</div>
				</div>

				<!-- Input -->
				<div style="padding: 12px; border-top: 1px solid #e5e7eb;">
					<input @bind="CurrentMessage"
						   placeholder="Ask something..."
						   style="width: 100%; padding: 10px 12px; border: 1px solid #ccc; border-radius: 9999px; font-size: 14px;" />
				</div>

				<!-- Submit button -->
				<div style="padding: 12px; border-top: 1px solid #e5e7eb;">
					<button @onclick="StreamPromptRequest"
							style="background-color: #2563eb; color: white; padding: 10px 16px; border-radius: 9999px; border: none; cursor: pointer; font-size: 14px;">
						Send
					</button>
				</div>
			}
		</div>
	</div>
}
