@page "/"

@inject IApiWrapper ApiWrapper
@inject IDbContextFactory<DatabaseContext> DbContextFactory

<PageTitle>Portfolio Viewer</PageTitle>

<h3>Activities</h3>
@if (activities == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Type</th>
                <th>Symbol</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var activity in activities)
            {
                <tr>
                    <td>@activity.Date</td>
                    <td>@activity.Type</td>
                    <td>@activity.SymbolProfile.Symbol</td>
                    <td>@activity.Quantity</td>
                    <td>@activity.UnitPrice</td>
                    <td>@(activity.Quantity * activity.UnitPrice)</td>
                </tr>
            }
        </tbody>
    </table>
}

<h3>Symbol Profiles</h3>
@if (symbolProfiles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Symbol</th>
                <th>Name</th>
                <th>Asset Class</th>
                <th>Currency</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var profile in symbolProfiles)
            {
                <tr>
                    <td>@profile.Symbol</td>
                    <td>@profile.Name</td>
                    <td>@profile.AssetClass</td>
                    <td>@profile.Currency</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Activity> activities;
    private List<SymbolProfile> symbolProfiles;

    protected override async Task OnInitializedAsync()
    {
        using var dbContext = await DbContextFactory.CreateDbContextAsync();
        activities = await dbContext.Activities.ToListAsync();
        symbolProfiles = await dbContext.SymbolProfiles.ToListAsync();
    }
}
